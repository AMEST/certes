version: 1.1.4.{build}
build:
  verbosity: minimal
  project: Certes.sln

skip_tags: true
image: Visual Studio 2017

skip_commits:
  files:
  - '*.md'
  #- '*.yml'

clone_depth: 1  
nuget:  
  disable_publish_on_pr: true

environment:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  DOTNET_CLI_TELEMETRY_OPTOUT: 0
  ver_offset: 360
  codecov_upload_token:
    secure: DxYtxftZ1rpZhZzixRqY3hHFrlEZlh62XPV4tcO+zxdsRNZWPSEl967VpRevAPSo

branches:
  # whitelist
  only:
    - release
    - master
    - dev
    - vnext
    - vsts

assembly_info:
  patch: true
  file: '**\AssemblyInfo.*'
  assembly_version: '$(CERTES_ASSEMBLY_VERSION)'
  assembly_file_version: '$(CERTES_ASSEMBLY_FILE_VERSION)'
  assembly_informational_version: '$(CERTES_ASSEMBLY_INFO_VERSION)'

init:
  - git config --global core.autocrlf input
  - ps: $verParts = $($env:appveyor_build_version) -Split '\.'
  - ps: $env:CERTES_ASSEMBLY_VERSION = $verParts[0] + '.' + $verParts[1] + '.' + $verParts[2]
  - ps: $env:CERTES_ASSEMBLY_FILE_VERSION = $env:CERTES_ASSEMBLY_VERSION + '.' + $verParts[3]
  - ps: $buildVer = $verParts[3] - $env:ver_offset
  - ps: $env:CERTES_ASSEMBLY_INFO_VERSION = if ($env:APPVEYOR_REPO_BRANCH -eq "release") { $env:CERTES_ASSEMBLY_VERSION } else { $env:CERTES_ASSEMBLY_VERSION + '-' + $env:APPVEYOR_REPO_BRANCH + '.' + $buildVer }
  - ps: $env:CERTES_PACKAGE_VERSION = $env:CERTES_ASSEMBLY_INFO_VERSION

install:
  - cmd: curl -O https://dist.nuget.org/win-x86-commandline/latest/nuget.exe
  - cd ./vsts/Certes.Vsts && npm install & cd ../../

before_build:
  - ps: New-Item build -Type directory -Force | Out-Null
  - ps: gci *.csproj -recurse | %{ (gc $_) -replace '\<Version\>1.0.0\<\/Version\>', "<Version>$($env:CERTES_PACKAGE_VERSION)</Version>" | sc $_.fullname }
  - cmd: nuget restore Certes.sln
  - ps: $vssExt = Get-Content 'vsts/Certes.Vsts/vss-extension.json' -raw | ConvertFrom-Json
  - ps: $vssExtVersion = [version]$vssExt.version
  - ps: $vssExt.version = "{0}.{1}.{2}" -f  $vssExtVersion.Major,  $vssExtVersion.Minor, $env:APPVEYOR_BUILD_NUMBER
  - ps: $vssExt | ConvertTo-Json -Depth 20 | Set-Content 'vsts/Certes.Vsts/vss-extension.json'

build_script:
  - msbuild -t:src\Certes:pack
  - msbuild -t:src\Certes_Cli:pack
  - msbuild -t:src\Certes_Cli:Publish -p:TargetFramework=netcoreapp1.0
  - ps: Get-ChildItem -Path "./src/**/*.nupkg" -Recurse | Move-Item -Destination "./build"
  - ps: '"dotnet %~dp0dotnet-acme.dll %* " | Set-Content .\src\Certes.Cli\bin\$($env:CONFIGURATION)\netcoreapp1.0\publish\certes.bat'
  - 7z a build\certes-cli.zip .\src\Certes.Cli\bin\%CONFIGURATION%\netcoreapp1.0\publish\*.* -r
  - cd ./vsts/Certes.Vsts && npm run tfx-pack & cd ../../

#test: off
before_test:

test_script:
  - cd ./vsts/Certes.Vsts && npm run nyc-lcov & cd ../../
  - cd test/Certes.Tests
  - ps: $openCover = "$($env:USERPROFILE)/.nuget/packages/opencover/4.6.519/tools/OpenCover.Console.exe"
  - ps: >-
      & $openCover "-register:user" "-target:dotnet.exe" "-targetargs:xunit --fx-version 2.0.0" "-oldstyle" "-output:./../../build/coverage.xml" "-filter:+[*]Certes.* -[Certes.Tests]*" "-hideskipped:All" "-returntargetcode"
  - cd ../../

after_test:
  - IF NOT "%codecov_upload_token%" == "" npm install codecov -g
  - IF NOT "%codecov_upload_token%" == "" codecov -f "./build/coverage.xml" -t %codecov_upload_token%
  - IF NOT "%codecov_upload_token%" == "" codecov -f "./build/coverage.lcov" -t %codecov_upload_token%

configuration: Release

artifacts:
    - path: build/*.nupkg
      name: nupkg
      
    - path: build/certes-cli.zip
      name: cli

    - path: build/*.vsix
      name: vsix

deploy:
  - provider: GitHub
    release: v$(CERTES_PACKAGE_VERSION)
    description: 'Certes v$(CERTES_PACKAGE_VERSION)'
    auth_token:
      secure: B+lTI7i/tnZeg1ZSmho3HvOWjs0C4hptNy5cvWgF0Nn7b6v8nwT/mxEWVCfIJ7Fy
    artifact: nupkg,cli
    draft: false
    prerelease: false
    on:
      branch: release

  - provider: GitHub
    release: v$(CERTES_PACKAGE_VERSION)
    description: 'Certes v$(CERTES_PACKAGE_VERSION)'
    auth_token:
      secure: B+lTI7i/tnZeg1ZSmho3HvOWjs0C4hptNy5cvWgF0Nn7b6v8nwT/mxEWVCfIJ7Fy
    artifact: nupkg,cli
    draft: true
    prerelease: true
    on:
      branch:
        - master
        - dev

  - provider: NuGet
    #server: http://www.nuget.org/api/v2/package                  # remove to push to NuGet.org
    api_key:
      secure: enjdo7AiXKaGhj8NC2k3wjQ9mGlU1jxABzG6tuphpM7dNaazlrSlvwR2H1kC4kr+
    skip_symbols: true
    symbol_server:           # remove to push symbols to SymbolSource.org
    artifact: nupkg
    on:
      branch: release

  - provider: NuGet
    server: https://www.myget.org/F/certes/api/v2/package
    api_key:
      secure: RSdqUIwRSn8DI5xaa4iWBzOtYU6y3K9JRh07myQpAIRf5IhlwsZpFsnQOpCg1g7J
    skip_symbols: true
    symbol_server:           # remove to push symbols to SymbolSource.org
    artifact: nupkg
    on:
      branch:
        - master
        - dev
        - vnext
        - vsts
